/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL)return 0;
            queue<pair<TreeNode*,unsigned long long int>>q;
            int max_width=0;
            q.push({root,1});
            while(!q.empty()){
                    int size=q.size();
                    int s,e;
                    for(int i=0;i<size;i++){
                            auto curr=q.front();
                            q.pop();
                            //if node first
                            if(i==0)s=curr.second;
                            //if node last
                            if(i==size-1)e=curr.second;
                            if(curr.first->left){
                                    q.push({curr.first->left,2*curr.second});
                            }
                            if(curr.first->right){
                                    q.push({curr.first->right,2*curr.second+1});
                            }
                            
                    }
                    max_width=max(max_width,e-s+1);
            }
            return max_width;
    }
};
